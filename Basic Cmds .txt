1)  //simple text file
	person = "Jose"
	print ("my name is {}" .format(person)) / print (f'my name is {person})
	
	d = {'a':123,'b';456}
	print(f"my number is {d['a']}")
	
	mylist = [0,1,2]
	print(f"my number is {mylist[0]}")
	
	library = [('Author','Topic','Pages'),('Twain','Rafting','602'),('Hamilton','Mythology','95')]
	for book in library:
		print(book) / print (f"Author is {book[0]}")
	
	for author,topic,pages in library:
		print(book) / print (f"{author} {topic} {pages}") / print (f"{author:{10}} {topic:30} {pages:{10}}") / print (f"{author:{10}} {topic:30} {pages:>{10}}") / print (f"{author:{10}} {topic:30} {pages:->{10}}")
	

	from datetime import datetime
	today = datetime(year=2019,month=2,day=28)
	print(f"{today}")   //For time format reference visit: strftime.org
	today
	print (f"{today:%B %d, %Y}")
	
2) //Files
	%%write test.txt
	//same runblock only works in jupyter
	Hello, this is a quick test file
	This is the second line of the file 
	
	pwd
	myfile = open('test.txt')
	myfile.read()
	myfile.read() //again bcoz, cursor will be in EOF after reading the file.. so calling again will have nothing
	myfile.seek(0) //reset cursor to index position [Begining]
	myfile.read()
	myfile.seek(0)
	content = myfile.read()
	print(content)
	myfile.close() //always close a file after using
	
	myfile = open('test.txt')
	myfile.readlines() //reads each line as seperate item
	myfile.seek(0)
	mylines = myfile.readlines()
	mylines
	for line in mylines:
		print (line[0]) / print (line.split()[0])
	
	myfile = open('test.txt','w+') //write mode [Overwritten]
	myfile.read() // Nothing tre.. everything deleted
	myfile.write('My brand new text')
	myfile.seek(0)
	myfile.read()
	myfile.close()
	
	myfile = open('test1.txt','a+') //append mode [New file created]
	myfile.write('My first line in a+ opening')
	myfile.close()
	newfile = open('test1.txt')
	newfile.read()
	newfile.write('fff') //can'test
	newfile.close()
	myfile = open('test1.txt',mode='a+')
	myfile.write('This is an added line, bcoz of a+)
	myfile.seek(0)
	myfile.read()
	myfile.write('This is second an added line)
	myfile.seek(0)
	print(myfile.read())
	myfile.close()
	
	//auto close file with 'with' keyword
	with open('test1','r') as mynewfile:
		myvar = mynewfile.readlines()
		
	myvariable
	
3) 	//Working with PDF with PyPDF2
	pip install PyPDF2 // in cmd
	
	import PyPDF2
	myfile = open('US_Declaration.pdf',mode='rb') //rb = read binary
	pdf_reader = PyPDF2.PdfFileReader(myfile)
	pdf_reader.numPages
	page_one = pdf_reader.getPage(0)
	page_one.extractText()
	print(page_one.extractText())
	mytext = page_one.extractText()
	myfile.close()
	f = open('US_Declaration.pdf,'rb')
	pdf_reader = PyPDF2.PdfFileReader(f)
	first_page = pdf_reader.getPage(0)
	pdf_writer = PyPDF2.PdfFileWriter()
	pdf_writer.addPage(first_page)
	pdf_output = open('my_new_pdf.pdf','wb')
	pdf_writer.write(pdf_output)
	pdf_output.close()
	f.close()
	
	brand_new = open('my_new_pdf.pdf','rb')
	pdf_reader = PyPDF2.PdfFileReader(brand_new)
	pdf_reader.numPages
	
	f = open('US_Declaration.pdf','rb')
	pdf_text = [0]
	pdf_reader = PyPDF2.PdfFileReader(f)
	for p in range(pdf_reader.numPages)
		page = pdf_reader.getPage(p)
		pdf_text.append(page.extractText())
	f.close()

	pdf_text
	len(pdf_text)
	
	for page in pdf_text
		print(' -- \n')
		print(' -- \n')
		print(' -- \n')
		print(' -- \n')
		print(' -- \n')
		print(' -- \n')
		print(' -- \n')
		
4) 	//Working with Regex
	text = "The phone number of the agent is 408-555-2313, call soon"
	"408-555-2313" in text
	
	import re
	pattern = "phone"
	re.search(pattern, text)
	my_match = re.search(pattern,text)
	my_match.span()
	my_match.start() / my_match.end()
	text = "my phone is a new phone"
	match = re.search(pattern,text)
	match.span()
	all_matches = re.findall("phone",text)
	len(all_matches)
	re.finditer("phone, text")
	
	for match in re.finditer("phone",text)
		print(match.span())
	
	text
	pattern = r'\d\d\d-\d\d\d-\d\d\d\d'
	phone_number = re.search(pattern,text)
	phone_number
	phone_number.group()
	text = "The phone number of the agent is 888-555-2313, call soon"
	phone_number = re.search(pattern,text)
	phone_number.group()
	pattern = r"\d{3}-\d{3}-\d{4}" / pattern = r"(\d{3})-(\d{3})-(\d{4})" 
	phone_number = re.search(pattern,text)
	phone_number.group()
	
5)  //More Regex techniques
	phone_number.group(1)
	re.search(r"man|wonman","This wonman was here")
	re.findall(r".at","The cat in the hat sat splat")
	re.findall(r"..at","The cat in the hat sat splat")
	re.findall(r"\d$",'This ends with a number 2")
	re.findall(r"^\d",'1 is the loneliest num") // for whole string
	
	phrase = "there are 3 nunbers 34 inside this sentence"
	re.findall(r"[^\d]") //exclude any digits
	re.findall(r"[^\d]+")
	test_phrase = "This is a string! but has puncuation. How to remote it?"
	mylist = re.findall(r"[^!.?]+",text_phrase)
	mylist
	' '.join(mylist)
	text = "only find the hyphen-words. were are the long-ish dash words?"
	re.findall(r'[\w]+-[\w]+',text)